package org.example;//import io.javalin.Javalin;import org.jsoup.Jsoup;import org.jsoup.nodes.Document;import org.jsoup.nodes.Element;import org.jsoup.select.Elements;import java.awt.*;import java.io.File;import java.io.FileOutputStream;import java.io.IOException;import java.net.URI;import java.net.http.HttpClient;import java.net.http.HttpRequest;import java.net.http.HttpResponse;import java.util.Scanner;public class Main {    public static void main(String[] args) throws IOException, InterruptedException {        System.out.println("Deteccion automatica de url suministrado iniciada (-_-) ");        System.err.println();        System.err.println();        System.err.println();//        var app = Javalin.create(/*config*/)//                .get("/api/pucmm", ctx -> ctx.result("Hello World"))//                .start(8080);//////        app.get("/justin", ctx ->{//           ctx.result("Justin mmg " + ctx.queryParam("nombre"));//        });//        consola//        Ac√° estoy capturando los datos a ingresar        Scanner scanner = new Scanner(System.in);        System.out.println("Ingrese el url valido : ");        String url = scanner.nextLine();//aca con el hhtpClient se crea el request, y con el response lo que el devuelva poder actuar con lo que devuelva// el response lo puse byte para que lo que sea que devuelva capturarlo mas adelante        try {            HttpClient client = null;            client = HttpClient.newHttpClient();            HttpRequest request = HttpRequest.newBuilder()                    .uri(URI.create(url))                    .GET() // GET is default                    .build();            HttpResponse<byte[]> response = client.send(request,                    HttpResponse.BodyHandlers.ofByteArray());//como capturo el response lo convierto a String para trabajar con dicha informacion            String tipo = response.headers().map().get("content-type").toString();            if (tipo.toLowerCase().contains("text/html")) {                System.out.println("El sistema detecto un documento tipo HTML");                //se crea el archivo temporal y luego con se le pasa informacion                File file = File.createTempFile("miarchivoaleer", ".txt");                try (FileOutputStream outputStream = new FileOutputStream(file)) {                    outputStream.write(response.body());                }//aca se cuenta la cantidad de lineas que tiene el archivo                Scanner sc = new Scanner(file);                int lineas = 0;                while (sc.hasNextLine()) {                    sc.nextLine();                    lineas++;                }                file.delete();                System.out.println("El documento html contiene " + lineas + "  lineas");                //aca se crea Elements para almacenar los elementos p y/o las etiquetas encontradas, lo mismo pasa con imagenes                Document doc = Jsoup.parse(new String(response.body()));                int formularios_post = 0;                int formularios_get = 0;                Elements elements;                int p = 0, imagenes = 0;                elements = doc.select("p");                p = elements.size();                System.out.println("Etiquetas p econtradas  = " + p);                elements = doc.select("img");                imagenes = elements.size();                System.out.println("Etiquetas img econtradas  = " + imagenes);                elements = doc.select("form");                int count = 1;                for (Element e : elements) {                    String metodo = e.attr("method").toString().toLowerCase();                    System.err.println(e.attr("method"));                    System.out.println("Para el formulario #" + count + " con metodo :" + metodo.toUpperCase() + " tenemos los siguientes inputs");                    if (metodo.equals("post")) {                        try {                            Document formDoc = Jsoup.connect(e.attr("action"))                                    .data("asignatura", "practica1")                                    .data("matricula-id", "10137568")                                    .post();                            System.err.println(formDoc.body());                        } catch (Exception e1) {                            System.err.println(e1.getMessage());                            System.err.println("No se puedo completar la llamada porque existe un error en url del form#" + count);                        }                        formularios_post++;                    } else if (metodo.equals("get")) {                        formularios_get++;                    }                    Elements inputs = e.select("input");                    for (Element i : inputs) {                        System.out.println("Objeto input tipo :" + i.attr("type") + " id :" + i.id());                    }                    count++;                }                System.out.println("Formularios metodo post= " + formularios_post);                System.out.println("Formularios metodo get = " + formularios_get);            }            if (tipo.toLowerCase().contains("application/pdf") || tipo.toLowerCase().contains("application/x-pdf")) {//            https://dgii.gov.do/transparencia/Oai/Documents/ListadoOficinasDGII.pdf                System.out.println("El sistema detecto un documento tipo PDF");                File file = File.createTempFile("mi_archivo_pdf", ".pdf");                try (FileOutputStream outputStream = new FileOutputStream(file)) {                    outputStream.write(response.body());                }                System.out.println("El archivo pdf se creo en : " + file.getAbsolutePath());                try {                    if (!Desktop.isDesktopSupported())                    {                        System.out.println("no puede abrir el archivo porque no posee un ambiente grafico");                        return;                    }                    Desktop desktop = Desktop.getDesktop();                    if (file.exists()) {                        //checks file exists or not                        desktop.open(file);                    }                } catch (Exception e) {                    e.printStackTrace();                }            }            if (tipo.toLowerCase().contains("image")) {                System.out.println("El sistema detecto un documento tipo IMAGEN");//            https://th.bing.com/th/id/OIP.rdR0GFg52VCwY1wBs0lRuQHaL7?rs=1&pid=ImgDetMain                File file = File.createTempFile("mi_imagen", ".jpeg");                try (FileOutputStream outputStream = new FileOutputStream(file)) {                    outputStream.write(response.body());                }                System.out.println("El archivo de imagen se creo en : " + file.getAbsolutePath());                try {                    if (!Desktop.isDesktopSupported())//check if Desktop is supported by Platform or not                    {                        System.out.println("no puede abrir el archivo porque no posee un ambiente grafico");                        return;                    }                    Desktop desktop = Desktop.getDesktop();                    if (file.exists())         //checks file exists or not                        desktop.open(file);              //opens the specified file                } catch (Exception e) {                    e.printStackTrace();                }            }        } catch (Exception e) {            System.err.println("Existe un error en la url suministrada");            System.err.println("");            System.err.println("");            System.err.println("");            e.printStackTrace();        }//        consola    }}